name: Deploy Karpenter and HPA

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-west-2
  CLUSTER_NAME: wiary
  KARPENTER_VERSION: 0.16.3
  KUBECONFIG: /home/runner/.kube/config

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Install AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install --update

    - name: Setup kubeconfig
      run: |
        mkdir -p /home/runner/.kube
        aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.AWS_REGION }}
        chmod 600 ${{ env.KUBECONFIG }}

    - name: Verify cluster access
      run: |
        aws sts get-caller-identity
        kubectl get nodes

    - name: Prepare Helm values
      run: |
        CLUSTER_ENDPOINT=$(aws eks describe-cluster --name ${{ env.CLUSTER_NAME }} --query "cluster.endpoint" --output text)
        sed -i "s|\${CLUSTER_ENDPOINT}|$CLUSTER_ENDPOINT|g" karpenter/values.yaml

    - name: Install Karpenter
      run: |
        helm repo add karpenter https://charts.karpenter.sh
        helm repo update
        helm install karpenter karpenter/karpenter \
          --namespace karpenter \
          --create-namespace \
          --version ${{ env.KARPENTER_VERSION }} \
          -f karpenter/values.yaml

    - name: Apply Provisioner
      run: |
        kubectl apply -f provisioner/default-provisioner.yaml -n karpenter

    - name: Apply HPA
      run: |
        kubectl apply -f hpa/ -n karpenter

    - name: Update ASG
      run: |
        aws autoscaling update-auto-scaling-group \
          --auto-scaling-group-name ${{ secrets.ASG_NAME }} \
          --min-size 1 \
          --max-size 1 \
          --desired-capacity 1